<h1>About</h1>

<h3>How to Use?</h3
Rooms and Users may be added, edited, updated and removed from the system using the links in topbar.
<br>To start booking, goto bc.baagi.org or simply click BookRoom on the topbar.
<br>Give the search form date, ballpark capacity and select yourself/user.
<br>Search Rooms!
<br><br>Search by name of the Room, the table is sorted by preference of your rooms. The webapp takes into account the last you'd booked via the #Ref.
<br>The Columns can be clicked to sort as per availability. Red: Booked slots, Green: Available.
<br>Click on slots in a particular Room, it should turn yellow.. when done click the big green Book Me Room! Button... Next, email your participants! We've our mail server running on our VPS, and it makes sure it won't end up into your spam folder using valid DNS/Reverse-DNS creds and DKIM signatures.
<br>Hint: No need to book rooms in a consecutive manner, select whatever slot you require. Example, you need to book meeting in Room X one hour during the morning and one in evening... so no need to do two bookings ;)<br>
<br>
<h2>Team and Technology</h2>
Hacked in Ruby on Rails.
<br>Uses Twitter Bootstrap, NGINX and some creativity ;)

<br>Hosted on prgmr.com VPS, ubuntu 12.04, 256MB RAM, 10Mbps Network
<br>The webapp is RESTful, thanks to Ruby on Rails; The webapp is entirely written using opensource technologies; Thanks to Twitter Bootstrap, the frontend is responsive and adapts to variety of display sizes.

<br><br>Mentors: Pritha, Rahul, Sovit
<br>
Members: Aakash MD :), Ranjan, Kiran, Rohit U, Kasirao, Prashant x 2, Ranju, Chandrapal, <a href="http://rohityadav.in">Rohit Y</a>

<br><br>Our Initial Idea consisted of a scalable webapp powered by NGINX, CouchDB (NoSQL), backbone.js for the AJAX frontend, Non-blocking scalable Python/Tornado web-router/load-balancer. This architecture does not need a backend, server side processing is done within the NoSQL db server powered by Spidermonkey JS engine (in case of CouchDB written in Erlang), by implementing Map and Reduce functionsin JS that gets us required JSON documents.

<br><br>After evaluating our resources and skills, we started writing the app in Ruby on Rails. We gave the above mentioned new technologies a shot, while the backend was almost developed we had problems with AJAX frontend. The code of the initial attempt (fails miserably) https://github.com/bhaisaab/bc (Don't know if we should have the old code available publicly, besides it does not work well). The current code is hosted <strike> in a private git repo, available on request,</strike> (got permission to make it public) on github: http://github.com/bhaisaab/bootcamp-ctx and is available on our private workspace on podio.

<br><br>Thanks to our mentors, especially Pritha and Rahul for their time and suggestions.

<br>Our whiteboard: <img src="/img/wb1.jpg">
<img src="/img/wb2.jpg">
